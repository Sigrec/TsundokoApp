<ResourceDictionary xmlns="https://github.com/avaloniaui"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:vm="clr-namespace:Tsundoku.ViewModels"
                    xmlns:sys="using:System"
					x:DataType="vm:ViewModelBase">
	<ControlTheme x:Key="MenuComboBox" TargetType="ComboBox">
		<Setter Property="Padding" Value="{DynamicResource ComboBoxPadding}" />
		<Setter Property="FocusAdorner" Value="{x:Null}" />
		<Setter Property="MaxDropDownHeight" Value="504" />
		<Setter Property="BorderThickness" Value="2" />
		<Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="FontSize" Value="15" />
		<Setter Property="FontWeight" Value="Bold"/>
		<Setter Property="AutoScrollToSelectedItem" Value="True"/>
		<!-- <Setter Property="PlaceholderForeground" Value="Aqua" /> -->
		<Setter Property="Background" Value="{CompiledBinding CurrentTheme.MenuButtonBGColor, Converter={StaticResource ConvertColor}}"/>
		<Setter Property="BorderBrush" Value="{CompiledBinding CurrentTheme.MenuButtonBorderColor, Converter={StaticResource ConvertColor}}"/>
		<Setter Property="Foreground" Value="{CompiledBinding CurrentTheme.MenuButtonTextAndIconColor, Converter={StaticResource ConvertColor}}"/>

		<Setter Property="Template">
			<ControlTemplate>
				<DataValidationErrors>
					<Grid ColumnDefinitions="*,32">
						<Border x:Name="Background"
								Grid.Column="0"
								Grid.ColumnSpan="2"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								CornerRadius="{TemplateBinding CornerRadius}"
								MinWidth="{DynamicResource ComboBoxThemeMinWidth}" />
						<Border x:Name="HighlightBackground"
								Grid.Column="0"
								Grid.ColumnSpan="2"
								Background="{DynamicResource ComboBoxBackgroundUnfocused}"
								BorderBrush="{DynamicResource ComboBoxBackgroundBorderBrushUnfocused}"
								BorderThickness="{TemplateBinding BorderThickness}"
								CornerRadius="{TemplateBinding CornerRadius}"
								IsVisible="False"/>
						<TextBlock x:Name="PlaceholderTextBlock"
								Grid.Column="0"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Margin="{TemplateBinding Padding}"
								Text="{TemplateBinding PlaceholderText}"
								Foreground="{TemplateBinding PlaceholderForeground}"
								IsVisible="{TemplateBinding SelectionBoxItem, Converter={x:Static ObjectConverters.IsNull}}" />
						<ContentControl x:Name="ContentPresenter"
										Content="{TemplateBinding SelectionBoxItem}"
										ContentTemplate="{TemplateBinding ItemTemplate}"
										Grid.Column="0"
										Margin="{TemplateBinding Padding}"
										HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
										VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />

						<Border x:Name="DropDownOverlay"
								Grid.Column="1"
								Background="Transparent"
								Margin="0,1,1,1"
								Width="30"
								IsVisible="False"
								HorizontalAlignment="Right" />

						<PathIcon x:Name="DropDownGlyph"
								Grid.Column="1"
								UseLayoutRounding="False"
								IsHitTestVisible="False"
								Height="12"
								Width="12"
								Margin="0,0,10,0"
								HorizontalAlignment="Right"
								VerticalAlignment="Center"
								Foreground="{CompiledBinding CurrentTheme.MenuButtonBorderColor, Converter={StaticResource ConvertColor}}"
								Data="M1939 486L2029 576L1024 1581L19 576L109 486L1024 1401L1939 486Z"/>

						<Popup Name="PART_Popup"
							WindowManagerAddShadowHint="False"
							IsOpen="{TemplateBinding IsDropDownOpen, Mode=TwoWay}"
							MinWidth="{Binding Bounds.Width, RelativeSource={RelativeSource TemplatedParent}}"
							MaxHeight="{TemplateBinding MaxDropDownHeight}"
							PlacementTarget="Background"
							IsLightDismissEnabled="True"
							InheritsTransform="True">
                            <Border x:Name="PopupBorder"
                                    Background="{CompiledBinding CurrentTheme.MenuButtonBGColor, Converter={StaticResource ConvertColor}}"
                                    BorderBrush="{CompiledBinding CurrentTheme.MenuButtonBorderColor, Converter={StaticResource ConvertColor}}"
                                    BorderThickness="2"
                                    CornerRadius="2">
                                <ScrollViewer HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                            VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                <ItemsPresenter Name="PART_ItemsPresenter"
                                                Margin="{DynamicResource ComboBoxDropdownContentMargin}"
                                                ItemsPanel="{TemplateBinding ItemsPanel}" />
                                </ScrollViewer>
                            </Border>
						</Popup>
					</Grid>
				</DataValidationErrors>
			</ControlTemplate>
		</Setter>

		<Style Selector="^:pointerover /template/ Border#Background">
			<Setter Property="Background" Value="{CompiledBinding CurrentTheme.MenuButtonBGHoverColor, Converter={StaticResource ConvertColor}}"/>
			<Setter Property="BorderBrush" Value="{CompiledBinding CurrentTheme.MenuButtonBorderHoverColor, Converter={StaticResource ConvertColor}}"/>
		</Style>

		<Style Selector="^:pressed /template/ Border#Background">
			<Setter Property="Background" Value="{CompiledBinding CurrentTheme.MenuButtonBGHoverColor, Converter={StaticResource ConvertColor}}"/>
			<Setter Property="BorderBrush" Value="{CompiledBinding CurrentTheme.MenuButtonBorderHoverColor, Converter={StaticResource ConvertColor}}"/>
		</Style>

		<Style Selector="^:pointerover /template/ PathIcon#DropDownGlyph">
			<Setter Property="Foreground" Value="{CompiledBinding CurrentTheme.MenuButtonTextAndIconHoverColor, Converter={StaticResource ConvertColor}}"/>
		</Style>
	</ControlTheme>

	<ControlTheme x:Key="MenuComboBoxItem" TargetType="ComboBoxItem">
		<Setter Property="Padding" Value="{DynamicResource ComboBoxItemThemePadding}" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Foreground" Value="{CompiledBinding CurrentTheme.MenuButtonTextAndIconColor, Converter={StaticResource ConvertColor}}"/>

		<Setter Property="Template">
			<ControlTemplate>
				<ContentPresenter Name="PART_ContentPresenter"
								Foreground="{TemplateBinding Foreground}"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								CornerRadius="0"
								ContentTemplate="{TemplateBinding ContentTemplate}"
								Content="{TemplateBinding Content}"
								HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
								Padding="{TemplateBinding Padding}" />
			</ControlTemplate>
		</Setter>

		<Style Selector="^:pressed">
			<Setter Property="Background" Value="{CompiledBinding CurrentTheme.MenuButtonBGHoverColor, Converter={StaticResource ConvertColor}}"/>
			<Setter Property="Foreground" Value="{CompiledBinding CurrentTheme.MenuButtonTextAndIconHoverColor, Converter={StaticResource ConvertColor}}"/>
		</Style>

		<Style Selector="^:pointerover">
			<Setter Property="Background" Value="{CompiledBinding CurrentTheme.MenuButtonBGHoverColor, Converter={StaticResource ConvertColor}}"/>
			<Setter Property="Foreground" Value="{CompiledBinding CurrentTheme.MenuButtonTextAndIconHoverColor, Converter={StaticResource ConvertColor}}"/>
		</Style>

		<Style Selector="^:selected">
			<Style Selector="^">
				<Setter Property="Background" Value="{CompiledBinding CurrentTheme.MenuButtonBGHoverColor, Converter={StaticResource ConvertColor}}"/>
				<Setter Property="Foreground" Value="{CompiledBinding CurrentTheme.MenuButtonTextAndIconHoverColor, Converter={StaticResource ConvertColor}}"/>
			</Style>
		</Style>
	</ControlTheme>

	<ControlTheme x:Key="MenuButton" TargetType="Button">
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="CornerRadius" Value="2"/>
		<Setter Property="FontWeight" Value="Bold"/>
		<Setter Property="FontSize" Value="15"/>
		<Setter Property="BorderThickness" Value="2"/>
		<Setter Property="RenderTransform" Value="none"/>
		<Setter Property="Padding" Value="{DynamicResource ButtonPadding}"/>
		<Setter Property="Transitions">
			<Transitions>
				<TransformOperationsTransition Property="RenderTransform" Duration="0:0:.075" />
			</Transitions>
		</Setter>
		<Setter Property="Background" Value="{CompiledBinding CurrentTheme.MenuButtonBGColor, Converter={StaticResource ConvertColor}}"/>
		<Setter Property="BorderBrush" Value="{CompiledBinding CurrentTheme.MenuButtonBorderColor, Converter={StaticResource ConvertColor}}"/>
		<Setter Property="Foreground" Value="{CompiledBinding CurrentTheme.MenuButtonTextAndIconColor, Converter={StaticResource ConvertColor}}"/>

		<Setter Property="Template">
			<ControlTemplate>
				<ContentPresenter x:Name="PART_ContentPresenter"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								CornerRadius="{TemplateBinding CornerRadius}"
								Content="{TemplateBinding Content}"
								ContentTemplate="{TemplateBinding ContentTemplate}"
								Padding="{TemplateBinding Padding}"
								RecognizesAccessKey="True"
								HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
			</ControlTemplate>
		</Setter>

		<Style Selector="^:pointerover">
			<Setter Property="Background" Value="{CompiledBinding CurrentTheme.MenuButtonBGHoverColor, Converter={StaticResource ConvertColor}}"/>
			<Setter Property="BorderBrush" Value="{CompiledBinding CurrentTheme.MenuButtonBorderHoverColor, Converter={StaticResource ConvertColor}}"/>
			<Setter Property="Foreground" Value="{CompiledBinding CurrentTheme.MenuButtonTextAndIconHoverColor, Converter={StaticResource ConvertColor}}"/>
		</Style>
	
		<Style Selector="^:pressed">
			<!-- <Setter Property="Background" Value="{CompiledBinding CurrentTheme.MenuButtonBGHoverColor, Converter={StaticResource ConvertColor}}"/>
			<Setter Property="BorderBrush" Value="{CompiledBinding CurrentTheme.MenuButtonBorderHoverColor, Converter={StaticResource ConvertColor}}"/>
			<Setter Property="Foreground" Value="{CompiledBinding CurrentTheme.MenuButtonTextAndIconHoverColor, Converter={StaticResource ConvertColor}}"/> -->
			<Setter Property="RenderTransform" Value="scale(0.98)" />
		</Style>

		<Style Selector="^:disabled">
			<Setter Property="Background" Value="{CompiledBinding CurrentTheme.MenuButtonBGHoverColor, Converter={StaticResource ConvertColor}}"/>
			<Setter Property="BorderBrush" Value="{CompiledBinding CurrentTheme.MenuButtonBorderHoverColor, Converter={StaticResource ConvertColor}}"/>
			<Setter Property="Foreground" Value="{CompiledBinding CurrentTheme.MenuButtonTextAndIconHoverColor, Converter={StaticResource ConvertColor}}"/>
		</Style>
	</ControlTheme>

	<ControlTheme x:Key="MenuToggleButton" TargetType="ToggleButton">
        <Setter Property="Background" Value="{CompiledBinding CurrentTheme.MenuButtonBGColor, Converter={StaticResource ConvertColor}}"/>
		<Setter Property="BorderBrush" Value="{CompiledBinding CurrentTheme.MenuButtonBorderColor, Converter={StaticResource ConvertColor}}"/>
		<Setter Property="Foreground" Value="{CompiledBinding CurrentTheme.MenuButtonTextAndIconColor, Converter={StaticResource ConvertColor}}"/>
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="CornerRadius" Value="2" />
        <Setter Property="Padding" Value="{DynamicResource ButtonPadding}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="RenderTransform" Value="none" />
        <Setter Property="Height" Value="37" />
        <Setter Property="Transitions">
        <Transitions>
            <TransformOperationsTransition Property="RenderTransform" Duration="0:0:.075" />
        </Transitions>
        </Setter>

        <Setter Property="Template">
            <ControlTemplate>
                <ContentPresenter x:Name="PART_ContentPresenter"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Padding="{TemplateBinding Padding}"
                                RecognizesAccessKey="True"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
            </ControlTemplate>
        </Setter>
	
		<Style Selector="^:pointerover">
			<Setter Property="Background" Value="{CompiledBinding CurrentTheme.MenuButtonBGHoverColor, Converter={StaticResource ConvertColor}}"/>
			<Setter Property="BorderBrush" Value="{CompiledBinding CurrentTheme.MenuButtonBorderHoverColor, Converter={StaticResource ConvertColor}}"/>
			<Setter Property="Foreground" Value="{CompiledBinding CurrentTheme.MenuButtonTextAndIconHoverColor, Converter={StaticResource ConvertColor}}"/>
		</Style>

		<Style Selector="^:pressed">
			<Setter Property="Background" Value="{CompiledBinding CurrentTheme.MenuButtonBGHoverColor, Converter={StaticResource ConvertColor}}"/>
			<Setter Property="BorderBrush" Value="{CompiledBinding CurrentTheme.MenuButtonBorderHoverColor, Converter={StaticResource ConvertColor}}"/>
			<Setter Property="Foreground" Value="{CompiledBinding CurrentTheme.MenuButtonTextAndIconHoverColor, Converter={StaticResource ConvertColor}}"/>
		</Style>

		<Style Selector="^:checked">
			<Style Selector="^">
				<Setter Property="Background" Value="{CompiledBinding CurrentTheme.MenuButtonBGHoverColor, Converter={StaticResource ConvertColor}}"/>
				<Setter Property="BorderBrush" Value="{CompiledBinding CurrentTheme.MenuButtonBorderHoverColor, Converter={StaticResource ConvertColor}}"/>
				<Setter Property="Foreground" Value="{CompiledBinding CurrentTheme.MenuButtonTextAndIconHoverColor, Converter={StaticResource ConvertColor}}"/>
			</Style>
		</Style>
    </ControlTheme>
    
    <ControlTheme x:Key="QueryListBox" TargetType="ListBox">
		<Setter Property="Background" Value="{CompiledBinding CurrentTheme.MenuButtonBGColor, Converter={StaticResource ConvertColor}}"/>
		<Setter Property="Foreground" Value="{CompiledBinding CurrentTheme.MenuButtonTextAndIconHoverColor, Converter={StaticResource ConvertColor}}"/>
        <Setter Property="BorderBrush" Value="{CompiledBinding CurrentTheme.MenuButtonBorderColor, Converter={StaticResource ConvertColor}}"/>
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.IsScrollChainingEnabled" Value="True" />
        <Setter Property="ScrollViewer.IsScrollInertiaEnabled" Value="True" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="CornerRadius" Value="2" />

        <Setter Property="Template">
            <ControlTemplate>
                <Border Name="border"
                        ClipToBounds="{TemplateBinding ClipToBounds}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}">
                    <ScrollViewer Name="PART_ScrollViewer"
                                    VerticalSnapPointsType="{TemplateBinding (ScrollViewer.VerticalSnapPointsType)}"
                                    HorizontalSnapPointsType="{TemplateBinding (ScrollViewer.HorizontalSnapPointsType)}"
                                    HorizontalScrollBarVisibility="{TemplateBinding (ScrollViewer.HorizontalScrollBarVisibility)}"
                                    VerticalScrollBarVisibility="{TemplateBinding (ScrollViewer.VerticalScrollBarVisibility)}"
                                    IsScrollChainingEnabled="{TemplateBinding (ScrollViewer.IsScrollChainingEnabled)}"
                                    IsScrollInertiaEnabled="{TemplateBinding (ScrollViewer.IsScrollInertiaEnabled)}"
                                    AllowAutoHide="{TemplateBinding (ScrollViewer.AllowAutoHide)}"
                                    BringIntoViewOnFocusChange="{TemplateBinding (ScrollViewer.BringIntoViewOnFocusChange)}">
                        <ItemsPresenter Name="PART_ItemsPresenter"
                                        ItemsPanel="{TemplateBinding ItemsPanel}"
                                        Margin="{TemplateBinding Padding}"/>
                    </ScrollViewer>
                </Border>
            </ControlTemplate>
        </Setter>
	</ControlTheme>
    
    <!-- <Thickness x:Key="ListBoxItemPadding">12,9,12,12</Thickness> -->
    <ControlTheme x:Key="QueryListBoxItem" TargetType="ListBoxItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="12,9,12,12" />
        <Setter Property="BorderThickness" Value="0,1,0,1" />
        <Setter Property="BorderBrush" Value="{CompiledBinding CurrentTheme.MenuButtonBorderColor, Converter={StaticResource ConvertColor}}"/>
        <Setter Property="Foreground" Value="{CompiledBinding CurrentTheme.MenuButtonTextAndIconColor, Converter={StaticResource ConvertColor}}"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        
        <Setter Property="Template">
            <ControlTemplate>
                <ContentPresenter Name="PART_ContentPresenter"
                                  Foreground="{TemplateBinding Foreground}"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  CornerRadius="{TemplateBinding CornerRadius}"
                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                  Content="{TemplateBinding Content}"
                                  FontWeight="Bold"
                                  FontSize="15"
                                  Padding="{TemplateBinding Padding}"
                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" />
            </ControlTemplate>
        </Setter>

        <Style Selector="^:pointerover">
			<Setter Property="Background" Value="{CompiledBinding CurrentTheme.MenuButtonBGHoverColor, Converter={StaticResource ConvertColor}}"/>
			<Setter Property="BorderBrush" Value="{CompiledBinding CurrentTheme.MenuButtonBorderHoverColor, Converter={StaticResource ConvertColor}}"/>
		</Style>

        <Style Selector="^:pressed">
			<Setter Property="Background" Value="{CompiledBinding CurrentTheme.MenuButtonBGHoverColor, Converter={StaticResource ConvertColor}}"/>
			<Setter Property="BorderBrush" Value="{CompiledBinding CurrentTheme.MenuButtonBorderHoverColor, Converter={StaticResource ConvertColor}}"/>
		</Style>

		<Style Selector="^:selected">
			<Style Selector="^">
				<Setter Property="Background" Value="{CompiledBinding CurrentTheme.MenuButtonBGHoverColor, Converter={StaticResource ConvertColor}}"/>
				<Setter Property="BorderBrush" Value="{CompiledBinding CurrentTheme.MenuButtonBorderHoverColor, Converter={StaticResource ConvertColor}}"/>
			</Style>

            <Style Selector="^:not(:focus)">
				<Setter Property="Background" Value="{CompiledBinding CurrentTheme.MenuButtonBGHoverColor, Converter={StaticResource ConvertColor}}"/>
				<Setter Property="BorderBrush" Value="{CompiledBinding CurrentTheme.MenuButtonBorderHoverColor, Converter={StaticResource ConvertColor}}"/>
			</Style>

			<!-- <Style Selector="^:pointerover">
				<Setter Property="Background" Value="{CompiledBinding CurrentTheme.MenuButtonBGColor, Converter={StaticResource ConvertColor}}"/>
				<Setter Property="BorderBrush" Value="{CompiledBinding CurrentTheme.MenuButtonBorderColor, Converter={StaticResource ConvertColor}}"/>
			</Style> -->

            <Style Selector="^:pressed">
				<Setter Property="Background" Value="{CompiledBinding CurrentTheme.MenuButtonBGColor, Converter={StaticResource ConvertColor}}"/>
				<Setter Property="BorderBrush" Value="{CompiledBinding CurrentTheme.MenuButtonBorderColor, Converter={StaticResource ConvertColor}}"/>
			</Style>
		</Style>
    </ControlTheme>

    <sys:Double x:Key="ToolTipContentMaxWidth">320</sys:Double>
    <ControlTheme x:Key="{x:Type ToolTip}" TargetType="ToolTip">
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Background" Value="{CompiledBinding CurrentTheme.MenuBGColor, Converter={StaticResource ConvertColor}}"/>
		<Setter Property="BorderBrush" Value="{CompiledBinding CurrentTheme.MenuButtonBorderColor, Converter={StaticResource ConvertColor}}"/>
		<Setter Property="Foreground" Value="{CompiledBinding CurrentTheme.MenuButtonTextAndIconColor, Converter={StaticResource ConvertColor}}"/>
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="FontSize" Value="{DynamicResource ToolTipContentThemeFontSize}" />
        <Setter Property="Padding" Value="{DynamicResource ToolTipBorderThemePadding}" />
        <Setter Property="MaxWidth" Value="{DynamicResource ToolTipContentMaxWidth}" />
        <Setter Property="CornerRadius" Value="{DynamicResource OverlayCornerRadius}" />
        <Setter Property="Opacity" Value="0" />
        <Setter Property="Transitions">
            <Transitions>
                <DoubleTransition Property="Opacity" Duration="0:0:0.15" />
            </Transitions>
        </Setter>
        <Setter Property="Template">
            <ControlTemplate>
            <Border Name="PART_LayoutRoot"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    Padding="{TemplateBinding Padding}"
                    CornerRadius="{TemplateBinding CornerRadius}">
                <ContentPresenter Name="PART_ContentPresenter"
                                MaxWidth="{TemplateBinding MaxWidth}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                TextBlock.TextWrapping="Wrap"/>
            </Border>
            </ControlTemplate>
        </Setter>

        <Style Selector="^:open">
            <Setter Property="Opacity" Value="1" />
        </Style>
    </ControlTheme>
</ResourceDictionary>